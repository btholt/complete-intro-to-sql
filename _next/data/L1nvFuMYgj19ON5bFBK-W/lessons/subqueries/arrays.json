{"pageProps":{"post":{"attributes":{},"html":"<p>You <em>can</em> return multiple values from a subquery but you have to handle the results correctly.</p>\n<p>Let&#39;s say you wanted to see all the keywords associated with any <em>Star Wars</em> movie. How would you go about doing that? You could do joins and have a row per keyword but that&#39;s pretty annoying and you&#39;d need code to unravel that mess and aggregate it likely. A subquery with an ARRAY constructor would do this much better.</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span>\n  m.name,\n  <span class=\"hljs-keyword\">ARRAY</span>(\n    <span class=\"hljs-keyword\">SELECT</span>\n      ecn.name\n    <span class=\"hljs-keyword\">FROM</span>\n      english_category_names ecn\n    <span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span>\n      movie_keywords mk\n    <span class=\"hljs-keyword\">ON</span>\n      mk.category_id <span class=\"hljs-operator\">=</span> ecn.category_id\n    <span class=\"hljs-keyword\">WHERE</span>\n      m.id <span class=\"hljs-operator\">=</span> mk.movie_id\n    LIMIT <span class=\"hljs-number\">5</span>\n  ) <span class=\"hljs-keyword\">AS</span> keywords\n<span class=\"hljs-keyword\">FROM</span>\n  movies m\n<span class=\"hljs-keyword\">WHERE</span>\n  name ILIKE <span class=\"hljs-string\">&#x27;%star wars%&#x27;</span>;\n</code></pre>\n<ul>\n<li>Array is a datatype in PostgreSQL. Here we&#39;re using that to aggregate our answers into one response.</li>\n<li>Notice we can use <code>m.id</code> in our subquery despite the fact the subquery doesn&#39;t reference movies at all. This is possible to do. The subquery has the context of the query it&#39;s inside. Makes it so we don&#39;t have to do that join inside of the subquery.</li>\n<li>These kinds of queries can get very expensive very quickly. We essentially made a loop with SQL where every row gets its own SELECT subquery. If the outter query returns a lot of rows and the inner query is expensive this will get out of hand quickly.</li>\n</ul>\n","slug":"arrays","title":"Arrays","section":"Subqueries","icon":"circle-dot","filePath":"/home/runner/work/complete-intro-to-sql/complete-intro-to-sql/lessons/11-subqueries/B-arrays.md","nextSlug":"/lessons/transactions/transactions","prevSlug":"/lessons/subqueries/how-to-subquery"}},"__N_SSG":true}